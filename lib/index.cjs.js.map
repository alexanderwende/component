{"version":3,"file":"index.cjs.js","sources":["../src/utils/string-utils.ts","../src/custom-element.ts","../src/decorators/custom-element.ts","../src/decorators/property.ts"],"sourcesContent":["const FIRST = /^[^]/;\nconst SPACES = /\\s+([\\S])/g;\nconst CAMELS = /[a-z]([A-Z])/g;\nconst KEBABS = /-([a-z])/g;\n\nexport function capitalize (string: string): string {\n\n    return string ? string.replace(FIRST, string[0].toUpperCase()) : string;\n}\n\nexport function uncapitalize (string: string): string {\n\n    return string ? string.replace(FIRST, string[0].toLowerCase()) : string;\n}\n\nexport function camelCase (string: string): string {\n\n    let matches;\n\n    if (string) {\n\n        string = string.trim();\n\n        while ((matches = SPACES.exec(string))) {\n\n            string = string.replace(matches[0], matches[1].toUpperCase());\n\n            SPACES.lastIndex = 0;\n        }\n\n        while ((matches = KEBABS.exec(string))) {\n\n            string = string.replace(matches[0], matches[1].toUpperCase());\n\n            KEBABS.lastIndex = 0;\n        }\n    }\n\n    return uncapitalize(string);\n}\n\nexport function kebabCase (string: string): string {\n\n    let matches;\n\n    if (string) {\n\n        string = string.trim();\n\n        while ((matches = SPACES.exec(string))) {\n\n            string = string.replace(matches[0], '-' + matches[1]);\n\n            SPACES.lastIndex = 0;\n        }\n\n        while ((matches = CAMELS.exec(string))) {\n\n            string = string.replace(matches[0], matches[0][0] + '-' + matches[1]);\n\n            CAMELS.lastIndex = 0;\n        }\n    }\n\n    return string ? string.toLowerCase() : string;\n}\n","import { html, render, TemplateResult } from 'lit-html';\nimport { PropertyDeclaration } from './decorators/property';\nimport { kebabCase } from './utils/string-utils';\n\nexport interface CustomElementType<T extends CustomElement = CustomElement> {\n\n    selector: string;\n\n    shadow: boolean;\n\n    propertyDeclarations: { [key: string]: PropertyDeclaration };\n\n    new (...args: any[]): T;\n}\n\nexport class CustomElement extends HTMLElement {\n\n    static selector: string;\n\n    static shadow: boolean;\n\n    static propertyDeclarations: { [key: string]: PropertyDeclaration } = {};\n\n    static get observedAttributes (): string[] {\n\n        return [];\n    }\n\n    protected _renderRoot: Element | DocumentFragment;\n\n    protected _updateRequest: Promise<boolean> = new Promise(resolve => resolve(true));\n\n    protected _changedProperties: Map<string, any> = new Map();\n\n    protected _isConnected = false;\n\n    protected _hasRequestedUpdate = false;\n\n    get isConnected (): boolean {\n\n        return this._isConnected;\n    }\n\n    constructor () {\n\n        super();\n\n        this._renderRoot = this.createRenderRoot();\n\n        console.log('constructed... ', this.constructor.name);\n    }\n\n    createRenderRoot (): Element | DocumentFragment {\n\n        return (this.constructor as CustomElementType).shadow ?\n               this.attachShadow({ mode: 'open' }) :\n               this;\n    }\n\n    adoptedCallback (): void {\n    }\n\n    connectedCallback (): void {\n\n        console.log('connected... ', this.constructor.name);\n\n        this.requestUpdate();\n    }\n\n    disconnectedCallback (): void {\n\n        console.log('disconnected... ', this.constructor.name);\n    }\n\n    attributeChangedCallback (attribute: string, oldValue: any, newValue: any): void {\n    }\n\n    propertyChangedCallback (property: string, oldValue: any, newValue: any): void {\n    }\n\n    template (): TemplateResult {\n\n        return html``;\n    }\n\n    render (): void {\n\n        console.log('render()... ', this.constructor.name);\n\n        render(this.template(), this._renderRoot);\n\n        this.renderCallback();\n    }\n\n    renderCallback (): void {\n\n        console.log('rendered... ', this.constructor.name);\n    }\n\n    update (changedProperties: Map<string, any>): void {\n\n        console.log('update()... ', changedProperties);\n\n        // TODO: update host bindings, reflected attributes, dispatch events...\n\n        this.render();\n\n        changedProperties.forEach((oldValue: any, propertyKey: string) => {\n\n            // properties in the changedProperties map will always have a declaration\n            const propertyDeclaration = this._getPropertyDeclaration(propertyKey)!;\n            const newValue            = this[propertyKey as keyof CustomElement];\n\n            // TODO: only reflect if property change was not initiated by observed attribute\n            if (propertyDeclaration.reflect) this._reflect(propertyKey, oldValue, newValue);\n\n            // TODO: only notify, if property change was not initiated by setting it from\n            //  the outside and not during constructor phase\n            if (propertyDeclaration.notify) this._notify(propertyKey, oldValue, newValue);\n        });\n    }\n\n    /**\n     * Dispatch a property-changed event.\n     *\n     * @param propertyKey\n     * @param oldValue\n     * @param newValue\n     */\n    protected _notify (propertyKey: string, oldValue: any, newValue: any): void {\n\n        const eventName = `${kebabCase(propertyKey)}-changed`;\n\n        this.dispatchEvent(new CustomEvent(eventName, {\n            composed: true,\n            detail:   {\n                property: propertyKey,\n                previous: oldValue,\n                current:  newValue\n            }\n        }));\n    }\n\n    /**\n     * Reflect a property to an attribute on the custom element.\n     *\n     * @param propertyKey\n     * @param oldValue\n     * @param newValue\n     */\n    protected _reflect (propertyKey: string, oldValue: any, newValue: any): void {\n\n        // TODO: resolve proper toAttribute mapper, attribute name...\n        const attributeName = kebabCase(propertyKey);\n\n        if (newValue === null) {\n\n            this.removeAttribute(attributeName);\n\n        } else {\n\n            this.setAttribute(attributeName, newValue);\n        }\n    }\n\n    requestUpdate (propertyKey?: string, oldValue?: any, newValue?: any): Promise<boolean> {\n\n        console.log('requestUpdate()... ', this.constructor.name);\n\n        const constructor = this.constructor as typeof CustomElement;\n\n        if (propertyKey && propertyKey in constructor.propertyDeclarations) {\n\n            const propertyDeclaration = constructor.propertyDeclarations[propertyKey];\n\n            // check if property is observed\n            if (!propertyDeclaration.observe) return this._updateRequest;\n\n            // check if property has changed\n            if (propertyDeclaration.hasChanged && !propertyDeclaration.hasChanged(oldValue, newValue)) return this._updateRequest;\n\n            // store changed property for batch processing\n            this._changedProperties.set(propertyKey, oldValue);\n        }\n\n        if (!this._hasRequestedUpdate) {\n\n            // enqueue update request if none was enqueued already\n            this._enqueueUpdate();\n        }\n\n        return this._updateRequest;\n    }\n\n    protected _performUpdate (): Promise<void> {\n\n        console.log('performUpdate()... ', this.constructor.name);\n\n        return new Promise(resolve => {\n\n            requestAnimationFrame(() => {\n\n                this.update(this._changedProperties);\n\n                this._changedProperties = new Map();\n\n                // TODO: Should this be moved before the update call?\n                // During the update, other property changes might occur...\n                this._hasRequestedUpdate = false;\n\n                resolve();\n            });\n        });\n    }\n\n    private async _enqueueUpdate () {\n\n        console.log('enqueueUpdate()... ', this.constructor.name);\n\n        let resolve: (result: boolean) => void;\n\n        const previousRequest = this._updateRequest;\n\n        this._hasRequestedUpdate = true;\n\n        this._updateRequest = new Promise<boolean>(res => resolve = res);\n\n        await previousRequest;\n\n        const result = this._performUpdate();\n\n        await result;\n\n        resolve!(!this._hasRequestedUpdate);\n    }\n\n    private _getPropertyDeclaration (propertyKey: string): PropertyDeclaration | undefined {\n\n        return (this.constructor as typeof CustomElement).propertyDeclarations[propertyKey];\n    }\n}","import { CustomElementType } from '../custom-element';\n\nexport interface CustomElementDeclaration extends Object {\n    selector: string;\n    shadow?: boolean;\n    define?: boolean;\n}\n\nexport const DEFAULT_CUSTOM_ELEMENT_DECLARATION: CustomElementDeclaration = {\n    selector: 'custom-element',\n    shadow:   true,\n    define:   true\n};\n\nexport const customElement = (options: CustomElementDeclaration) => {\n\n    options = { ...DEFAULT_CUSTOM_ELEMENT_DECLARATION, ...options };\n\n    return (target: CustomElementType) => {\n\n        target.selector = ('selector' in options) ? options.selector! : target.selector;\n        target.shadow   = options.shadow!;\n\n        if (options.define) {\n\n            window.customElements.define(target.selector, target);\n        }\n    };\n};\n","import { CustomElement } from '../custom-element';\n\n/**\n * Gets the {@link PropertyDescriptor} of a property from its prototype\n * or a parent prototype - excluding {@link Object.prototype} itself, to\n * ensure correct prototype inheritance.\n *\n * @param target        The prototype to get the descriptor from\n * @param propertyKey   The property key for which to get the descriptor\n */\nfunction getPropertyDescriptor (target: Object, propertyKey: string | symbol): PropertyDescriptor | undefined {\n\n    if (propertyKey in target) {\n\n        while (target !== Object.prototype) {\n\n            if (target.hasOwnProperty(propertyKey)) {\n\n                return Object.getOwnPropertyDescriptor(target, propertyKey);\n            }\n\n            target = Object.getPrototypeOf(target);\n        }\n    }\n\n    return undefined;\n}\n\n/**\n * A CustomElement property declaration\n *\n * @property observe    True if the property change should be observed and cause an update\n * @property notify     True if the property change should trigger a custom event\n */\nexport interface PropertyDeclaration {\n    observe?: boolean,\n    notify?: boolean,\n    reflect?: boolean,\n    hasChanged?: (oldValue: any, newValue: any) => boolean;\n    toAttribute?: (value: any) => string;\n    fromAttribute?: (value: string) => any;\n}\n\nexport const DEFAULT_PROPERTY_DECLARATION: PropertyDeclaration = {\n    observe:       true,\n    notify:        false,\n    reflect:       false,\n    hasChanged:    (oldValue: any, newValue: any) => oldValue !== newValue && (oldValue === oldValue || newValue === newValue),\n    toAttribute:   value => value.toString(),\n    fromAttribute: value => value\n};\n\nexport const property = (options: PropertyDeclaration = {}) => {\n\n    return (target: Object, propertyKey: string): void => {\n\n        const descriptor = getPropertyDescriptor(target, propertyKey);\n        const hiddenKey  = (typeof propertyKey === 'string') ? `_${propertyKey}` : Symbol();\n        const get        = descriptor && descriptor.get || function (this: any) { return this[hiddenKey]; };\n        const set        = descriptor && descriptor.set || function (this: any, value: any) { this[hiddenKey] = value; };\n\n        Object.defineProperty(target, propertyKey, {\n            configurable: true,\n            enumerable:   true,\n            get (): any {\n                return get.call(this);\n            },\n            set (value: any): void {\n                console.log(`setting ${propertyKey}...`, value);\n                const oldValue = this[propertyKey];\n                set.call(this, value);\n                this.requestUpdate(propertyKey, oldValue, value);\n            }\n        });\n\n        const constructor = target.constructor as typeof CustomElement;\n\n        constructor.propertyDeclarations[propertyKey] = { ...DEFAULT_PROPERTY_DECLARATION, ...options };\n    };\n};"],"names":["SPACES","CAMELS","kebabCase","string","matches","trim","exec","replace","lastIndex","toLowerCase","CustomElement","HTMLElement","[object Object]","super","this","Promise","resolve","Map","_renderRoot","createRenderRoot","console","log","constructor","name","observedAttributes","isConnected","_isConnected","shadow","attachShadow","mode","requestUpdate","attribute","oldValue","newValue","property","html","render","template","renderCallback","changedProperties","forEach","propertyKey","propertyDeclaration","_getPropertyDeclaration","reflect","_reflect","notify","_notify","eventName","dispatchEvent","CustomEvent","composed","detail","previous","current","attributeName","removeAttribute","setAttribute","propertyDeclarations","observe","_updateRequest","hasChanged","_changedProperties","set","_hasRequestedUpdate","_enqueueUpdate","requestAnimationFrame","update","previousRequest","res","result","_performUpdate","DEFAULT_CUSTOM_ELEMENT_DECLARATION","selector","define","customElement","options","target","window","customElements","getPropertyDescriptor","Object","prototype","hasOwnProperty","getOwnPropertyDescriptor","getPrototypeOf","DEFAULT_PROPERTY_DECLARATION","toAttribute","value","toString","fromAttribute","descriptor","hiddenKey","Symbol","get","defineProperty","configurable","enumerable","call"],"mappings":"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"}