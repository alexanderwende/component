import{html as t,render as e}from"lit-html";import*as r from"lit-html";export{r as lit};const n=/\s+([\S])/g,i=/[a-z]([A-Z])/g;function o(t){let e;if(t){for(t=t.trim();e=n.exec(t);)t=t.replace(e[0],"-"+e[1]),n.lastIndex=0;for(;e=i.exec(t);)t=t.replace(e[0],e[0][0]+"-"+e[1]),i.lastIndex=0}return t?t.toLowerCase():t}const s={default:{fromAttribute:t=>{if(null===t||""===t)return null;try{return JSON.parse(t)}catch(e){return t}},toAttribute:t=>{switch(typeof t){case"boolean":return t?"":null;case"object":return null==t?t:JSON.stringify(t);case"undefined":case"string":return t;default:return t.toString()}}},boolean:{fromAttribute:t=>null!==t,toAttribute:t=>t?"":null},string:{fromAttribute:t=>null===t?null:t,toAttribute:t=>t},number:{fromAttribute:t=>null===t?null:Number(t),toAttribute:t=>null==t?t:t.toString()},object:{fromAttribute:t=>null===t||""===t?null:JSON.parse(t),toAttribute:t=>null==t?t:JSON.stringify(t)},array:{fromAttribute:t=>null===t||""===t?null:JSON.parse(t),toAttribute:t=>null==t?t:JSON.stringify(t)},date:{fromAttribute:t=>null===t||""===t?null:new Date(t),toAttribute:t=>null==t?t:t.toString()}};function c(t){return"function"==typeof t}function l(t){return"function"==typeof t}function a(t){return"function"==typeof t}function u(t){return"string"==typeof t||"number"==typeof t||"symbol"==typeof t}function p(t){return"string"==typeof t?o(t):"number"==typeof t?`attr-${t}`.replace(/\.|\+/g,"-"):o(`attr-${String(t)}`.replace(/(\s|>|<|=|\+|\.|\(|\)|\/)+/g,"-").replace(/\-$/,""))}const h=(t,e)=>t!==e&&(t==t||e==e),f={attribute:!0,converter:s.default,reflectAttribute:!0,reflectProperty:!0,notify:!0,observe:h},d=t=>new Error(`Error executing attribute reflector ${String(t)}.`),g=t=>new Error(`Error executing property reflector ${String(t)}.`),b=t=>new Error(`Error executing property notifier ${String(t)}.`);class y extends HTMLElement{constructor(){super(),this._updateRequest=Promise.resolve(!0),this._changedProperties=new Map,this._reflectingProperties=new Map,this._notifyingProperties=new Map,this._listenerDeclarations=[],this._isConnected=!1,this._hasRequestedUpdate=!1,this._isReflecting=!1,this._renderRoot=this.createRenderRoot(),console.log("constructed... ",this.constructor.name)}static get observedAttributes(){return[]}get isConnected(){return this._isConnected}createRenderRoot(){return this.constructor.shadow?this.attachShadow({mode:"open"}):this}adoptedCallback(){}connectedCallback(){console.log("connected... ",this.constructor.name),this._listen(),this.requestUpdate()}disconnectedCallback(){console.log("disconnected... ",this.constructor.name),this._unlisten()}attributeChangedCallback(t,e,r){this._isReflecting?console.log(`attributeChangedCallback... "${t}" reflecting from property`):(console.log(`attributeChangedCallback... "${t}": ${e} -> ${r}`),e!==r&&this.reflectAttribute(t,e,r))}propertyChangedCallback(t,e,r){}template(){return t``}render(){console.log("render()... ",this.constructor.name),e(this.template(),this._renderRoot),this.renderCallback()}renderCallback(){console.log("rendered... ",this.constructor.name)}update(t){console.log("update()... ",t),this.render(),this._reflectingProperties.forEach((t,e)=>{this.reflectProperty(e,t,this[e])}),this._notifyingProperties.forEach((t,e)=>{this.notifyProperty(e,t,this[e])})}reflectAttribute(t,e,r){const n=this.constructor.attributes.get(t);if(!n)return void console.log(`observed attribute "${t}" not found... ignoring...`);const i=this._getPropertyDeclaration(n);if(i.reflectAttribute){if(console.log(`reflecting attribute ${t} to property...`),this._isReflecting=!0,c(i.reflectAttribute))try{i.reflectAttribute.call(this,t,e,r)}catch(t){throw d(i.reflectAttribute)}else if(u(i.reflectAttribute))try{this[i.reflectAttribute](t,e,r)}catch(t){throw d(i.reflectAttribute)}else this._reflectAttribute(t,e,r);this._isReflecting=!1,console.log(`reflecting attribute ${t} to property done...`)}}reflectProperty(t,e,r){const n=this._getPropertyDeclaration(t);if(n&&n.reflectProperty){if(console.log(`reflecting property ${String(t)} to attribute...`),this._isReflecting=!0,l(n.reflectProperty))try{n.reflectProperty.call(this,t,e,r)}catch(t){throw g(n.reflectProperty)}else if(u(n.reflectProperty))try{this[n.reflectProperty](t,e,r)}catch(t){throw g(n.reflectProperty)}else this._reflectProperty(t,e,r);console.log(`reflecting property ${String(t)} to attribute done...`),this._isReflecting=!1}}notifyProperty(t,e,r){const n=this._getPropertyDeclaration(t);if(n&&n.notify)if(a(n.notify))try{n.notify.call(this,t,e,r)}catch(t){throw b(n.notify.toString())}else if(u(n.notify))try{this[n.notify](t,e,r)}catch(t){throw b(n.notify)}else this._notify(t,e,r)}notifyChanges(t){const e=new Map(this._changedProperties);t();for(const[t,r]of this._changedProperties)e.has(t)&&e.get(t)===r||this._notifyingProperties.set(t,r)}_reflectAttribute(t,e,r){const n=this.constructor.attributes.get(t),i=this._getPropertyDeclaration(n).converter.fromAttribute(r);this[n]=i}_reflectProperty(t,e,r){const n=this._getPropertyDeclaration(t),i=n.attribute,o=n.converter.toAttribute(r);void 0!==o&&(null===o?this.removeAttribute(i):this.setAttribute(i,o))}_listen(){this.constructor.listeners.forEach((t,e)=>{const r={event:t.event,options:t.options,listener:this[e].bind(this),target:t.target?"function"==typeof t.target?t.target():t.target:this};r.target.addEventListener(r.event,r.listener,r.options),this._listenerDeclarations.push(r)})}_unlisten(){this._listenerDeclarations.forEach(t=>{t.target.removeEventListener(t.event,t.listener,t.options)})}_notify(t,e,r){const n=`${o(String(t))}-changed`;this.dispatchEvent(new CustomEvent(n,{composed:!0,detail:{property:t,previous:e,current:r}})),console.log(`notify ${n}...`)}requestUpdate(t,e,r){if(t){const n=this._getPropertyDeclaration(t);if(n){const{observe:i}=n;if(!i)return this._updateRequest;if("function"==typeof i&&!i(e,r))return this._updateRequest;this._changedProperties.set(t,e),this._isReflecting||this._reflectingProperties.set(t,e)}}return this._hasRequestedUpdate||this._enqueueUpdate(),this._updateRequest}_scheduleUpdate(){return new Promise(t=>{requestAnimationFrame(()=>{this.update(this._changedProperties),this._changedProperties=new Map,this._reflectingProperties=new Map,this._notifyingProperties=new Map,this._hasRequestedUpdate=!1,t()})})}async _enqueueUpdate(){let t;const e=this._updateRequest;this._hasRequestedUpdate=!0,this._updateRequest=new Promise(e=>t=e),await e;const r=this._scheduleUpdate();await r,t(!this._hasRequestedUpdate)}_getPropertyDeclaration(t){return this.constructor.properties.get(t)}}y.attributes=new Map,y.properties=new Map,y.listeners=new Map;const _={selector:"",shadow:!0,define:!0},P=(t={})=>{const e=Object.assign({},_,t);return t=>{const r=t;r.selector=e.selector||t.selector,r.shadow=e.shadow;const n=[...new Set(r.observedAttributes.reduce((t,e)=>t.concat(r.overridden.has(e)?[]:e),[]).concat([...t.attributes.keys()]))];Reflect.defineProperty(r,"observedAttributes",{configurable:!0,enumerable:!1,get:()=>n}),e.define&&window.customElements.define(r.selector,r)}};function w(t){return function(e,r,n){const i=e.constructor;!function(t){t.hasOwnProperty("listeners")||(t.listeners=new Map(t.listeners))}(i),null===t.event?i.listeners.delete(r):i.listeners.set(r,Object.assign({},t))}}const m=(t={})=>(e,r)=>{const n=function(t,e){if(e in t)for(;t!==Object.prototype;){if(t.hasOwnProperty(e))return Object.getOwnPropertyDescriptor(t,e);t=Object.getPrototypeOf(t)}}(e,r),i="string"==typeof r?`_${r}`:Symbol(),o=n&&n.get||function(){return this[i]},s=n&&n.set||function(t){this[i]=t};Object.defineProperty(e,r,{configurable:!0,enumerable:!0,get(){return o.call(this)},set(t){const e=this[r];s.call(this,t),this.requestUpdate(r,e,t)}});const c=e.constructor,l=Object.assign({},f,t);!0===l.attribute&&(l.attribute=p(r)),!0===l.observe&&(l.observe=f.observe),function(t){t.hasOwnProperty("properties")||(t.properties=new Map(t.properties));t.hasOwnProperty("attributes")||(t.attributes=new Map(t.attributes));t.hasOwnProperty("overridden")||(t.overridden=new Set)}(c);const a=c.properties.has(r)?c.properties.get(r).attribute:void 0;a&&(c.attributes.delete(a),c.overridden.add(a)),l.attribute&&c.attributes.set(l.attribute,r),c.properties.set(r,l)};export{y as CustomElement,s as ATTRIBUTE_CONVERTERS,_ as DEFAULT_CUSTOM_ELEMENT_DECLARATION,P as customElement,w as listener,m as property,c as isAttributeReflector,l as isPropertyReflector,a as isPropertyNotifier,u as isPropertyKey,p as createAttributeName,h as DEFAULT_PROPERTY_CHANGE_DETECTOR,f as DEFAULT_PROPERTY_DECLARATION};
//# sourceMappingURL=index.esm.js.map
