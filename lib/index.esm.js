import{render as t}from"lit-html";export{html,svg,TemplateResult,SVGTemplateResult}from"lit-html";const e={fromAttribute:t=>{if(null===t||""===t)return null;try{return JSON.parse(t)}catch(e){return t}},toAttribute:t=>{switch(typeof t){case"boolean":return t?"":null;case"object":return null==t?t:JSON.stringify(t);case"undefined":case"string":return t;default:return t.toString()}}},r={fromAttribute:t=>null!==t,toAttribute:t=>t?"":null},i={fromAttribute:t=>null===t?null:t,toAttribute:t=>t},n={fromAttribute:t=>null===t?null:Number(t),toAttribute:t=>null==t?t:t.toString()},s={fromAttribute:t=>null===t||""===t?null:JSON.parse(t),toAttribute:t=>null==t?t:JSON.stringify(t)},o={fromAttribute:t=>null===t||""===t?null:JSON.parse(t),toAttribute:t=>null==t?t:JSON.stringify(t)},c={fromAttribute:t=>null===t||""===t?null:new Date(t),toAttribute:t=>null==t?t:t.toString()},a=/\s+([\S])/g,l=/[a-z]([A-Z])/g;function u(t){let e;if(t){for(t=t.trim();e=a.exec(t);)t=t.replace(e[0],"-"+e[1]),a.lastIndex=0;for(;e=l.exec(t);)t=t.replace(e[0],e[0][0]+"-"+e[1]),l.lastIndex=0}return t?t.toLowerCase():t}function h(t){return"function"==typeof t}function p(t){return"function"==typeof t}function f(t){return"function"==typeof t}function d(t){return"function"==typeof t}function y(t){return"string"==typeof t||"number"==typeof t||"symbol"==typeof t}function b(t){return u(t.replace(/\W+/g,"-").replace(/\-$/,""))}function g(t){return"string"==typeof t?u(t):`attr-${b(String(t))}`}function _(t,e,r){let i="";return i="string"==typeof t?u(t):b(String(t)),`${e?`${u(e)}-`:""}${i}${r?`-${u(r)}`:""}`}const w=(t,e)=>t!==e&&(t==t||e==e),P={attribute:!0,converter:e,reflectAttribute:!0,reflectProperty:!0,notify:!0,observe:w},m=t=>new Error(`Error executing attribute reflector ${String(t)}.`),v=t=>new Error(`Error executing property reflector ${String(t)}.`),A=t=>new Error(`Error executing property notifier ${String(t)}.`),R=t=>new Error(`Error executing property change detector ${String(t)}.`);class S extends HTMLElement{constructor(){super(),this._updateRequest=Promise.resolve(!0),this._changedProperties=new Map,this._reflectingProperties=new Map,this._notifyingProperties=new Map,this._listenerDeclarations=[],this._hasUpdated=!1,this._hasRequestedUpdate=!1,this._isReflecting=!1,this._renderRoot=this.createRenderRoot()}static get observedAttributes(){return[]}adoptedCallback(){this._notifyLifecycle("adopted")}connectedCallback(){this.requestUpdate(),this._listen(),this._notifyLifecycle("connected")}disconnectedCallback(){this._unlisten(),this._notifyLifecycle("disconnected")}attributeChangedCallback(t,e,r){this._isReflecting||e!==r&&this.reflectAttribute(t,e,r)}updateCallback(t,e){this._notifyLifecycle("update",{firstUpdate:e})}createRenderRoot(){return this.constructor.shadow?this.attachShadow({mode:"open"}):this}template(){}render(){const e=this.template();e&&t(e,this._renderRoot,{eventContext:this})}watch(t){const e=new Map(this._changedProperties);t();for(const[t,r]of this._changedProperties)e.has(t)&&!this.hasChanged(t,e.get(t),r)||this._notifyingProperties.set(t,r)}requestUpdate(t,e,r){if(t){if(!this.hasChanged(t,e,r))return this._updateRequest;this._changedProperties.set(t,e),this._isReflecting||this._reflectingProperties.set(t,e)}return this._hasRequestedUpdate||this._enqueueUpdate(),this._updateRequest}update(){this.render(),this._reflectingProperties.forEach((t,e)=>{this.reflectProperty(e,t,this[e])}),this._notifyingProperties.forEach((t,e)=>{this.notifyProperty(e,t,this[e])})}getPropertyDeclaration(t){return this.constructor.properties.get(t)}hasChanged(t,e,r){const i=this.getPropertyDeclaration(t);if(i&&d(i.observe))try{return i.observe.call(null,e,r)}catch(t){throw R(i.observe)}return!1}reflectAttribute(t,e,r){const i=this.constructor.attributes.get(t);if(!i)return void console.log(`observed attribute "${t}" not found... ignoring...`);const n=this.getPropertyDeclaration(i);if(n.reflectAttribute){if(this._isReflecting=!0,h(n.reflectAttribute))try{n.reflectAttribute.call(this,t,e,r)}catch(t){throw m(n.reflectAttribute)}else if(y(n.reflectAttribute))try{this[n.reflectAttribute](t,e,r)}catch(t){throw m(n.reflectAttribute)}else this._reflectAttribute(t,e,r);this._isReflecting=!1}}reflectProperty(t,e,r){const i=this.getPropertyDeclaration(t);if(i&&i.reflectProperty){if(this._isReflecting=!0,p(i.reflectProperty))try{i.reflectProperty.call(this,t,e,r)}catch(t){throw v(i.reflectProperty)}else if(y(i.reflectProperty))try{this[i.reflectProperty](t,e,r)}catch(t){throw v(i.reflectProperty)}else this._reflectProperty(t,e,r);this._isReflecting=!1}}notifyProperty(t,e,r){const i=this.getPropertyDeclaration(t);if(i&&i.notify)if(f(i.notify))try{i.notify.call(this,t,e,r)}catch(t){throw A(i.notify.toString())}else if(y(i.notify))try{this[i.notify](t,e,r)}catch(t){throw A(i.notify)}else this._notifyProperty(t,e,r)}_reflectAttribute(t,e,r){const i=this.constructor.attributes.get(t),n=this.getPropertyDeclaration(i).converter.fromAttribute(r);this[i]=n}_reflectProperty(t,e,r){const i=this.getPropertyDeclaration(t);if(!i.attribute)return;const n=i.attribute,s=i.converter.toAttribute(r);void 0!==s&&(null===s?this.removeAttribute(n):this.setAttribute(n,s))}_notifyProperty(t,e,r){const i=_(t,"","changed");this.dispatchEvent(new CustomEvent(i,{composed:!0,detail:{property:t,previous:e,current:r}}))}_notifyLifecycle(t,e){const r=_(t,"on"),i=Object.assign({composed:!0},e?{detail:e}:{});this.dispatchEvent(new CustomEvent(r,i))}_listen(){this.constructor.listeners.forEach((t,e)=>{const r={event:t.event,options:t.options,listener:this[e].bind(this),target:t.target?"function"==typeof t.target?t.target():t.target:this};r.target.addEventListener(r.event,r.listener,r.options),this._listenerDeclarations.push(r)})}_unlisten(){this._listenerDeclarations.forEach(t=>{t.target.removeEventListener(t.event,t.listener,t.options)})}_scheduleUpdate(){if(this._hasUpdated)return new Promise(t=>requestAnimationFrame(()=>{this._performUpdate(),t()}));this._performUpdate()}_performUpdate(){this.isConnected&&(this.update(),this.updateCallback(this._changedProperties,!this._hasUpdated),this._hasUpdated=!0,this._changedProperties=new Map,this._reflectingProperties=new Map,this._notifyingProperties=new Map),this._hasRequestedUpdate=!1}async _enqueueUpdate(){let t;const e=this._updateRequest;this._hasRequestedUpdate=!0,this._updateRequest=new Promise(e=>t=e),await e;const r=this._scheduleUpdate();r&&await r,t(!this._hasRequestedUpdate)}}S.attributes=new Map,S.properties=new Map,S.listeners=new Map;const O={selector:"",shadow:!0,define:!0},E=(t={})=>{const e=Object.assign({},O,t);return t=>{const r=t;r.selector=e.selector||t.selector,r.shadow=e.shadow;const i=[...new Set(r.observedAttributes.reduce((t,e)=>t.concat(r.overridden&&r.overridden.has(e)?[]:e),[]).concat([...t.attributes.keys()]))];delete r.overridden,Reflect.defineProperty(r,"observedAttributes",{configurable:!0,enumerable:!1,get:()=>i}),e.define&&window.customElements.define(r.selector,r)}};function U(t){return function(e,r,i){const n=e.constructor;!function(t){t.hasOwnProperty("listeners")||(t.listeners=new Map(t.listeners))}(n),null===t.event?n.listeners.delete(r):n.listeners.set(r,Object.assign({},t))}}const q=(t={})=>(e,r)=>{const i=function(t,e){if(e in t)for(;t!==Object.prototype;){if(t.hasOwnProperty(e))return Object.getOwnPropertyDescriptor(t,e);t=Object.getPrototypeOf(t)}}(e,r),n="string"==typeof r?`_${r}`:Symbol(),s=i&&i.get||function(){return this[n]},o=i&&i.set||function(t){this[n]=t};Object.defineProperty(e,r,{configurable:!0,enumerable:!0,get(){return s.call(this)},set(t){const e=this[r];o.call(this,t),this.requestUpdate(r,e,t)}});const c=e.constructor,a=Object.assign({},P,t);!0===a.attribute&&(a.attribute=g(r)),!0===a.observe&&(a.observe=P.observe),function(t){t.hasOwnProperty("properties")||(t.properties=new Map(t.properties));t.hasOwnProperty("attributes")||(t.attributes=new Map(t.attributes));t.hasOwnProperty("overridden")||(t.overridden=new Set)}(c);const l=c.properties.has(r)?c.properties.get(r).attribute:void 0;l&&(c.attributes.delete(l),c.overridden.add(l)),a.attribute&&c.attributes.set(a.attribute,r),c.properties.set(r,a)};export{S as CustomElement,e as AttributeConverterDefault,r as AttributeConverterBoolean,i as AttributeConverterString,n as AttributeConverterNumber,s as AttributeConverterObject,o as AttributeConverterArray,c as AttributeConverterDate,O as DEFAULT_CUSTOM_ELEMENT_DECLARATION,E as customElement,U as listener,q as property,h as isAttributeReflector,p as isPropertyReflector,f as isPropertyNotifier,d as isPropertyChangeDetector,y as isPropertyKey,b as encodeAttribute,g as createAttributeName,_ as createEventName,w as DEFAULT_PROPERTY_CHANGE_DETECTOR,P as DEFAULT_PROPERTY_DECLARATION};
//# sourceMappingURL=index.esm.js.map
